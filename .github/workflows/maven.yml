# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Main workflow

on:
  push:
    branches: [ main ]
    
env:
  HEROKU_APP_NAME: 'nye-progkorny-albums'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build and publish with Maven
      run: |
        # Versioning setup
        version_prefix=`mvn help:evaluate -Dexpression=project.version --quiet -DforceStdout --file albums/pom.xml | awk -F. '{print $1"."$2}'`
        version="$version_prefix.${{github.run_number}}"
        echo "Setting artifact version to $version"
        # Push version to env
        echo "ARTIFACT_VERSION=$version" >> $GITHUB_ENV
        # Overwrite local artifact version
        mvn -B versions:set -DnewVersion="$version" --file albums/pom.xml
        mvn -B deploy --file albums/pom.xml
        cp "albums/web/target/web-${version}.jar" "albums/web/target/albums.jar"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Deploy to Heroku
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Get image from packages, tag and push to Heroku
        run: |
          docker pull ghcr.io/hxffner/progkorny:${{ env.ARTIFACT_VERSION }}
          docker tag ghcr.io/hxffner/progkorny:${{ env.ARTIFACT_VERSION }} registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
        env:
          ARTIFACT_VERSION: ${{ needs.build.outputs.artifactVersion }}
      - name: Release app on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ env.HEROKU_APP_NAME }} web